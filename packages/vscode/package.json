{
  "name": "gemini-coder",
  "displayName": "Gemini Coder - free AI coding",
  "description": "Copy folders and files for chatbots or initialize them hands-free! Use built-in API Tools for code completions, file refactoring and applying chat responses.",
  "version": "1.0.394",
  "scripts": {
    "build": "npx vsce package --no-dependencies",
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --config ./webpack.config.js",
    "lint": "eslint src --ext ts,tsx",
    "lint:fix": "eslint src --ext ts,tsx --fix",
    "test": "jest"
  },
  "publisher": "robertpiosik",
  "homepage": "https://gemini-coder.netlify.app/",
  "repository": {
    "type": "git",
    "url": "https://github.com/robertpiosik/gemini-coder"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "AI",
    "Chat"
  ],
  "keywords": [
    "ai",
    "autocomplete",
    "refactoring",
    "assistant",
    "fim",
    "chat",
    "free",
    "AI Studio",
    "Gemini",
    "ChatGPT",
    "Claude",
    "DeepSeek",
    "Grok",
    "Mistral",
    "HuggingChat",
    "openai",
    "typescript",
    "javascript",
    "go",
    "golang",
    "json",
    "php",
    "ruby",
    "kotlin",
    "tools",
    "c++",
    "c#"
  ],
  "main": "out/extension.js",
  "activationEvents": [],
  "capabilities": {
    "virtualWorkspaces": true,
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "icon": "media/logo.png",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "geminiCoder",
          "title": "Gemini Coder",
          "icon": "resources/activity-bar-icon.svg"
        }
      ]
    },
    "views": {
      "geminiCoder": [
        {
          "id": "geminiCoderViewOpenEditors",
          "name": "Context: Open Editors",
          "icon": "resources/activity-bar-icon.svg"
        },
        {
          "id": "geminiCoderViewWorkspace",
          "name": "Context: Workspace",
          "icon": "resources/activity-bar-icon.svg"
        },
        {
          "id": "geminiCoderViewWebsites",
          "name": "Context: Websites",
          "icon": "resources/activity-bar-icon.svg"
        },
        {
          "id": "geminiCoderView",
          "name": "Gemini Coder",
          "type": "webview",
          "icon": "resources/activity-bar-icon.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "geminiCoder.copyContext",
        "title": "Copy Context",
        "category": "Gemini Coder",
        "icon": "$(copy)"
      },
      {
        "command": "geminiCoder.selectSavedContext",
        "title": "Select Saved Context",
        "category": "Gemini Coder",
        "icon": "$(checklist)"
      },
      {
        "command": "geminiCoder.saveContext",
        "title": "Save Current Context",
        "category": "Gemini Coder",
        "icon": "$(save)"
      },
      {
        "command": "geminiCoder.checkAll",
        "title": "Check All",
        "category": "Gemini Coder",
        "icon": "$(check-all)"
      },
      {
        "command": "geminiCoder.clearChecks",
        "title": "Clear All Checks",
        "category": "Gemini Coder",
        "icon": "$(clear-all)"
      },
      {
        "command": "geminiCoder.collapseFolders",
        "title": "Collapse Folders",
        "category": "Gemini Coder",
        "icon": "$(collapse-all)"
      },
      {
        "command": "geminiCoder.checkAllOpenEditors",
        "title": "Check All",
        "category": "Gemini Coder",
        "icon": "$(check-all)"
      },
      {
        "command": "geminiCoder.clearChecksOpenEditors",
        "title": "Clear All Checks",
        "category": "Gemini Coder",
        "icon": "$(clear-all)"
      },
      {
        "command": "geminiCoder.closeEditor",
        "title": "Close Editor",
        "category": "Gemini Coder",
        "icon": "$(close)"
      },
      {
        "command": "geminiCoder.closeAllEditors",
        "title": "Close All Editors",
        "category": "Gemini Coder",
        "icon": "$(close-all)"
      },
      {
        "command": "geminiCoder.saveAll",
        "title": "Save All",
        "category": "Gemini Coder",
        "icon": "$(save-all)"
      },
      {
        "command": "geminiCoder.codeCompletion",
        "title": "Code Completion",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.codeCompletionAutoAccept",
        "title": "Code Completion",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.codeCompletionWithSuggestions",
        "title": "Code Completion with Suggestions",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.codeCompletionWithSuggestionsAutoAccept",
        "title": "Code Completion with Suggestions",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.codeCompletionToClipboard",
        "title": "Code Completion Prompt to Clipboard",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.codeCompletionWithSuggestionsToClipboard",
        "title": "Code Completion with Suggestions to Clipboard",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.codeCompletionInChat",
        "title": "Code Completion in Chat",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.codeCompletionInChatWith",
        "title": "Code Completion in Chat with...",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.applyChatResponse",
        "title": "Apply Chat Response",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.webChat",
        "title": "Web Chat",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.webChatWith",
        "title": "Web Chat with...",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.chatToClipboard",
        "title": "Chat to Clipboard",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.refactor",
        "title": "Refactor",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.refactorToClipboard",
        "title": "Refactor to Clipboard",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.newFolder",
        "title": "New Folder...",
        "icon": "$(new-folder)"
      },
      {
        "command": "geminiCoder.newFile",
        "title": "New File...",
        "icon": "$(new-file)"
      },
      {
        "command": "geminiCoder.rename",
        "title": "Rename..."
      },
      {
        "command": "geminiCoder.previewWebsite",
        "title": "Preview Website Content"
      },
      {
        "command": "geminiCoder.delete",
        "title": "Delete"
      },
      {
        "command": "geminiCoder.applyChatResponseFastReplace",
        "title": "Apply Chat Response (Fast replace)",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.applyChatResponseIntelligentUpdate",
        "title": "Apply Chat Response (Intelligent update)",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.revert",
        "title": "Revert Last Applied Chat Response",
        "category": "Gemini Coder"
      },
      {
        "command": "geminiCoder.generateCommitMessage",
        "title": "Generate Commit Message with Gemini Coder",
        "category": "Gemini Coder",
        "icon": "$(sparkle)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "geminiCoder.clearChecks",
          "when": "false"
        },
        {
          "command": "geminiCoder.clearChecksOpenEditors",
          "when": "false"
        },
        {
          "command": "geminiCoder.checkAll",
          "when": "false"
        },
        {
          "command": "geminiCoder.checkAllOpenEditors",
          "when": "false"
        },
        {
          "command": "geminiCoder.collapseFolders",
          "when": "false"
        },
        {
          "command": "geminiCoder.closeEditor",
          "when": "false"
        },
        {
          "command": "geminiCoder.closeAllEditors",
          "when": "false"
        },
        {
          "command": "geminiCoder.saveAll",
          "when": "false"
        },
        {
          "command": "geminiCoder.newFile",
          "when": "false"
        },
        {
          "command": "geminiCoder.newFolder",
          "when": "false"
        },
        {
          "command": "geminiCoder.rename",
          "when": "false"
        },
        {
          "command": "geminiCoder.delete",
          "when": "false"
        },
        {
          "command": "geminiCoder.previewWebsite",
          "when": "false"
        },
        {
          "command": "geminiCoder.selectSavedContext",
          "when": "false"
        },
        {
          "command": "geminiCoder.saveContext",
          "when": "false"
        },
        {
          "command": "geminiCoder.generateCommitMessage",
          "when": "false"
        },
        {
          "command": "geminiCoder.codeCompletionAutoAccept",
          "when": "false"
        },
        {
          "command": "geminiCoder.codeCompletionWithSuggestionsAutoAccept",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "geminiCoder.selectSavedContext",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@1"
        },
        {
          "command": "geminiCoder.saveContext",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@2"
        },
        {
          "command": "geminiCoder.copyContext",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@3"
        },
        {
          "command": "geminiCoder.checkAll",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@4"
        },
        {
          "command": "geminiCoder.clearChecks",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@5"
        },
        {
          "command": "geminiCoder.newFile",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@6"
        },
        {
          "command": "geminiCoder.newFolder",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@7"
        },
        {
          "command": "geminiCoder.collapseFolders",
          "when": "view == geminiCoderViewWorkspace",
          "group": "navigation@8"
        },
        {
          "command": "geminiCoder.checkAllOpenEditors",
          "when": "view == geminiCoderViewOpenEditors",
          "group": "navigation@1"
        },
        {
          "command": "geminiCoder.clearChecksOpenEditors",
          "when": "view == geminiCoderViewOpenEditors",
          "group": "navigation@2"
        },
        {
          "command": "geminiCoder.saveAll",
          "when": "view == geminiCoderViewOpenEditors",
          "group": "navigation@3"
        },
        {
          "command": "geminiCoder.closeAllEditors",
          "when": "view == geminiCoderViewOpenEditors",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "geminiCoder.closeEditor",
          "when": "view == geminiCoderViewOpenEditors && viewItem == openEditor",
          "group": "inline"
        },
        {
          "command": "geminiCoder.rename",
          "when": "view == geminiCoderViewOpenEditors && viewItem == openEditor",
          "group": "1_modification@1"
        },
        {
          "command": "geminiCoder.delete",
          "when": "view == geminiCoderViewOpenEditors && viewItem == openEditor",
          "group": "1_modification@2"
        },
        {
          "command": "geminiCoder.newFile",
          "when": "view == geminiCoderViewWorkspace && viewItem == directory",
          "group": "1_creation@1"
        },
        {
          "command": "geminiCoder.newFolder",
          "when": "view == geminiCoderViewWorkspace && viewItem == directory",
          "group": "1_creation@2"
        },
        {
          "command": "geminiCoder.rename",
          "when": "view == geminiCoderViewWorkspace",
          "group": "1_modification@1"
        },
        {
          "command": "geminiCoder.delete",
          "when": "view == geminiCoderViewWorkspace",
          "group": "1_modification@2"
        }
      ],
      "scm/title": [
        {
          "command": "geminiCoder.generateCommitMessage",
          "group": "navigation",
          "when": "scmProvider == git"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Gemini Coder Settings",
      "properties": {
        "geminiCoder.commitMessagePrompt": {
          "type": "string",
          "scope": "resource",
          "description": "The prompt text used when generating commit messages.",
          "default": "Write a brief and precise summary for the following diff, limited to a single sentence if possible and nothing else. Use an imperative tone to ensure clarity and focus on the primary change or purpose."
        },
        "geminiCoder.attachOpenFiles": {
          "type": "boolean",
          "default": true,
          "description": "Attach open files to the context."
        },
        "geminiCoder.ignoredExtensions": {
          "type": "array",
          "description": "List of file extensions to ignore in the context.",
          "default": [
            "svg"
          ],
          "items": {
            "type": "string",
            "description": "File extension to ignore (without the dot)"
          }
        },
        "geminiCoder.chatStyleInstructions": {
          "type": "string",
          "scope": "resource",
          "description": "Style instructions for chat responses.",
          "default": "Whenever proposing a file use the file block syntax.\nFiles must be represented as code blocks with their path in the first line comment.\nExample of a code block with a file path in the first line comment:\n```typescript\n// src/filename.ts\ncontents of file\n```\nUse ellipsis comments, e.g. \"// ...\", when necessary."
        },
        "geminiCoder.presets": {
          "type": "array",
          "default": [
            {
              "name": "2.5 Pro",
              "chatbot": "AI Studio",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "gemini-2.5-pro-preview-03-25",
              "temperature": 0.5,
              "systemInstructions": "You're a helpful coding assistant."
            },
            {
              "name": "2.5 Flash",
              "chatbot": "AI Studio",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "gemini-2.5-flash-preview-04-17",
              "temperature": 0.5,
              "systemInstructions": "You're a helpful coding assistant."
            },
            {
              "name": "2.0 Flash",
              "chatbot": "AI Studio",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "gemini-2.0-flash",
              "temperature": 0.5,
              "systemInstructions": "You're a helpful coding assistant."
            },
            {
              "name": "2.5 Pro",
              "chatbot": "Gemini",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "2.5-pro"
            },
            {
              "name": "2.5 Pro (canvas)",
              "chatbot": "Gemini",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "2.5-pro",
              "options": [
                "canvas"
              ]
            },
            {
              "name": "2.5 Flash",
              "chatbot": "Gemini",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "2.5-flash-experimental"
            },
            {
              "name": "2.5 Flash (canvas)",
              "chatbot": "Gemini",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "2.5-flash-experimental",
              "options": [
                "canvas"
              ]
            },
            {
              "name": "Open WebUI",
              "chatbot": "Open WebUI",
              "port": 3000,
              "promptPrefix": "",
              "promptSuffix": "",
              "temperature": 0.5,
              "systemInstructions": "You're a helpful coding assistant."
            },
            {
              "name": "ChatGPT",
              "chatbot": "ChatGPT",
              "promptPrefix": "",
              "promptSuffix": ""
            },
            {
              "name": "Claude",
              "chatbot": "Claude",
              "promptPrefix": "",
              "promptSuffix": ""
            },
            {
              "name": "GitHub Copilot",
              "chatbot": "GitHub Copilot",
              "promptPrefix": "",
              "promptSuffix": ""
            },
            {
              "name": "Grok",
              "chatbot": "Grok",
              "promptPrefix": "",
              "promptSuffix": ""
            },
            {
              "name": "Grok (Think)",
              "chatbot": "Grok",
              "promptPrefix": "",
              "promptSuffix": "",
              "options": [
                "think"
              ]
            },
            {
              "name": "DeepSeek",
              "chatbot": "DeepSeek",
              "promptPrefix": "",
              "promptSuffix": ""
            },
            {
              "name": "DeepSeek - DeepThink (R1)",
              "chatbot": "DeepSeek",
              "promptPrefix": "",
              "promptSuffix": "",
              "options": [
                "deep-think"
              ]
            },
            {
              "name": "Mistral",
              "chatbot": "Mistral",
              "promptPrefix": "",
              "promptSuffix": ""
            },
            {
              "name": "HuggingChat",
              "chatbot": "HuggingChat",
              "promptPrefix": "",
              "promptSuffix": ""
            }
          ],
          "description": "Preset is a general or task specific web chat configuration.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the preset."
              },
              "chatbot": {
                "type": "string",
                "enum": [
                  "AI Studio",
                  "Gemini",
                  "Open WebUI",
                  "OpenRouter",
                  "ChatGPT",
                  "Claude",
                  "GitHub Copilot",
                  "Grok",
                  "DeepSeek",
                  "Mistral",
                  "HuggingChat"
                ],
                "description": "Choose among supported chatbots."
              },
              "promptPrefix": {
                "type": "string",
                "examples": [
                  "Outline the steps needed to achieve:",
                  "Draft a roadmap for accomplishing:",
                  "Propose various approaches for addressing:",
                  "Identify potential challenges in developing:",
                  "Describe the purpose of this code:",
                  "I need assistance troubleshooting this issue:",
                  "Help diagnose this error:",
                  "Generate commit message based on changes:",
                  "Write tests for:"
                ],
                "description": "Prefix prepended to all prompts sent with this chat."
              },
              "promptSuffix": {
                "type": "string",
                "examples": [
                  "Keep your response concise.",
                  "Think step by step.",
                  "Show only changed fragments.",
                  "Summarize your understanding of the problem.",
                  "Highlight what needs to change.",
                  "Detail the key considerations.",
                  "Suggest any alternative approaches.",
                  "Identify potential drawbacks.",
                  "Ask for clarifications if needed before proceeding."
                ],
                "description": "Suffix appended to all prompts sent with this chat."
              },
              "model": {
                "type": "string",
                "description": "Model to use."
              },
              "options": {
                "type": "array",
                "description": "Options to enable, e.g. canvas.",
                "items": {
                  "type": "string",
                  "description": "Option name."
                }
              },
              "temperature": {
                "type": "number",
                "description": "Temperature to use."
              },
              "systemInstructions": {
                "type": "string",
                "description": "System instructions to use."
              },
              "port": {
                "type": "number",
                "description": "Open WebUI only. Port for 'localhost', if your instance is networked, remove this param and proxy it to `http://openwebui/` with nginx."
              }
            },
            "required": [
              "name",
              "chatbot"
            ]
          }
        },
        "geminiCoder.codeCompletionsSettings": {
          "type": "object",
          "scope": "resource",
          "description": "Settings for code completions API tool.",
          "properties": {
            "provider": {
              "type": "string",
              "enum": [
                "Gemini API",
                "OpenRouter"
              ],
              "description": "Provider to use for code completions."
            },
            "model": {
              "type": "string",
              "description": "Model to use for code completions."
            },
            "temperature": {
              "type": "number",
              "description": "Temperature setting for code completions."
            }
          }
        },
        "geminiCoder.fileRefactoringSettings": {
          "type": "object",
          "scope": "resource",
          "description": "Settings for file refactoring API tool.",
          "properties": {
            "provider": {
              "type": "string",
              "enum": [
                "Gemini API",
                "OpenRouter"
              ],
              "description": "Provider to use for file refactoring."
            },
            "model": {
              "type": "string",
              "description": "Model to use for file refactoring."
            },
            "temperature": {
              "type": "number",
              "description": "Temperature setting for file refactoring."
            }
          }
        },
        "geminiCoder.applyChatResponseSettings": {
          "type": "object",
          "scope": "resource",
          "description": "Settings for applying chat responses API tool.",
          "properties": {
            "provider": {
              "type": "string",
              "enum": [
                "Gemini API",
                "OpenRouter"
              ],
              "description": "Provider to use for applying chat responses."
            },
            "model": {
              "type": "string",
              "description": "Model to use for applying chat responses."
            },
            "temperature": {
              "type": "number",
              "description": "Temperature setting for applying chat responses."
            }
          }
        },
        "geminiCoder.commitMessagesSettings": {
          "type": "object",
          "scope": "resource",
          "description": "Settings for commit messages API tool.",
          "properties": {
            "provider": {
              "type": "string",
              "enum": [
                "Gemini API",
                "OpenRouter"
              ],
              "description": "Provider to use for commit messages."
            },
            "model": {
              "type": "string",
              "description": "Model to use for commit messages."
            },
            "temperature": {
              "type": "number",
              "description": "Temperature setting for commit messages."
            }
          }
        }
      }
    }
  },
  "devDependencies": {
    "@babel/core": "^7.26.10",
    "@babel/preset-env": "^7.26.9",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.27.0",
    "@types/he": "^1.2.3",
    "@types/jest": "^29.5.14",
    "@types/node": "20.x",
    "@types/react": "^18.2.60",
    "@types/react-dom": "^18.2.19",
    "@types/vscode": "1.92.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "babel-loader": "^9.2.1",
    "clean-webpack-plugin": "^4.0.0",
    "copy-webpack-plugin": "^12.0.2",
    "css-loader": "^6.5.1",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-react": "^7.37.5",
    "jest": "^29.7.0",
    "mini-css-extract-plugin": "^2.9.2",
    "sass-embedded": "^1.86.3",
    "sass-loader": "^12.6.0",
    "style-loader": "^3.3.4",
    "ts-jest": "^29.3.1",
    "ts-loader": "^9.5.2",
    "typed-css-modules": "^0.9.1",
    "typescript": "^5.8.2",
    "webpack": "^5.98.0",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "@svgr/webpack": "^8.1.0",
    "@vscode/codicons": "^0.0.36",
    "axios": "^1.8.4",
    "bufferutil": "^4.0.9",
    "classnames": "^2.5.1",
    "he": "^1.2.0",
    "ignore": "^6.0.2",
    "marked": "^15.0.7",
    "path-browserify": "^1.0.1",
    "react": "^18.2.0",
    "react-autosize-textarea": "^7.1.0",
    "react-dom": "^18.2.0",
    "ui": "workspace:*",
    "utf-8-validate": "^6.0.5",
    "ws": "^8.18.1"
  }
}
